name: Build packages

on:
  push: 
    branches:
      - main
  pull_request:

env:
  VCPKG_VERSION: 2025.06.13

jobs:
  windows:
    runs-on: windows-2025
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dotnet/nbgv@master
        id: nbgv
      - name: Checkout vcpkg repo
        uses: actions/checkout@v4
        with:
          repository: microsoft/vcpkg
          ref: ${{ env.VARIABLE-NAME }}
          fetch-depth: 1
          path: vcpkg
      - name: Check LLVM version
        # We need at least LLVM 18.0 for proper Objective C support.  Visual Studio 2022 ships with LLVM 17,
        # so we need to make sure we pick up clang from C:\Program Files\LLVM\bin\
        # For full-fledged support on Windows, we'll need https://github.com/llvm/llvm-project/pull/107604,
        # which will be included in LLVM 20.0
        run: clang --version
      - name: Bootstrap vcpkg
        run: ./vcpkg/scripts/bootstrap.ps1
      - name: Install libobjc2
        run: ./vcpkg/vcpkg.exe install libobjc2:x64-windows-llvm --overlay-ports=./ports --overlay-triplets=./triplets
      - name: Install libdispatch
        run: ./vcpkg/vcpkg.exe install libdispatch:x64-windows-llvm --overlay-ports=./ports --overlay-triplets=./triplets
      - name: Install gnustep-make
        run: ./vcpkg/vcpkg.exe install gnustep-make:x64-windows-llvm --overlay-ports=./ports --overlay-triplets=./triplets
      - name: Install gnustep-base
        run: ./vcpkg/vcpkg.exe install gnustep-base:x64-windows-llvm --overlay-ports=./ports --overlay-triplets=./triplets
      - name: Install gnustep-gui
        run: ./vcpkg/vcpkg.exe install gnustep-gui:x64-windows-llvm --overlay-ports=./ports --overlay-triplets=./triplets
      - name: Install gnustep-headless
        run: ./vcpkg/vcpkg.exe install gnustep-headless:x64-windows-llvm --overlay-ports=./ports --overlay-triplets=./triplets
        # Create an artifact which contains the headless binaries only
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: installed-windows-headless
          path: ./vcpkg/installed
      - name: Install gnustep-back
        # Only require the core cairo features; some of the transitive dependencies generate build problems;
        # but we must disable the optional features on the dependency itself:
        # https://github.com/microsoft/vcpkg/issues/26664#issuecomment-1374506677
        run: ./vcpkg/vcpkg.exe install cairo[core]:x64-windows-llvm gnustep-back:x64-windows-llvm --overlay-ports=./ports --overlay-triplets=./triplets
      - name: Install gnustep-winuxtheme
        run: ./vcpkg/vcpkg.exe install gnustep-winuxtheme:x64-windows-llvm --overlay-ports=./ports --overlay-triplets=./triplets
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vcpkg-gnustep-${{ steps.nbgv.outputs.NuGetPackageVersion }}-windows
          path: ./vcpkg/installed
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vcpkg-gnustep-${{ steps.nbgv.outputs.NuGetPackageVersion }}-windows-logs
          path: ./vcpkg/buildtrees/**/*.log
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: Configure and build tutorial
        run: |
          ./vcpkg/vcpkg.exe install gnustep:x64-windows-llvm --overlay-ports=./ports --overlay-triplets=./triplets
          cd tutorial
          cmake . --preset windows
          cmake --build --preset windows
          ./build/Tutorial.exe

  linux:
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: ubuntu-22.04
            image: ubuntu:22.04
            family: ubuntu
          - name: ubuntu-24.04
            image: ubuntu:24.04
            family: ubuntu
          - name: rockylinux-9
            image: rockylinux:9
            family: rhel
            # Some packages, such as giflib-devel, are not in the base RHEL repos but in an additional repository;
            # which was named 'powertools' on RHEL8 and 'CodeReady Builder' on RHEL9.
            # See https://wiki.rockylinux.org/rocky/repo/#notes-on-crb
            repos: crb
          - name: rockylinux-8
            image: rockylinux:8
            family: rhel
            repos: powertools
    env:
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: true
    steps:
      - name: Install dependencies (Ubuntu)
        run: |
          apt-get update
          apt-get install -y clang lld curl zip unzip tar git pkg-config make
        if: matrix.family == 'ubuntu'
      - name: Install dependencies (Enterprise Linux)
        run: |
          yum install -y clang lld zip unzip tar git pkg-config which findutils
        if: matrix.family == 'rhel'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/checkout@v4
        with:
          repository: microsoft/vcpkg
          ref: ${{ env.VARIABLE-NAME }}
          fetch-depth: 1
          path: vcpkg
      - name: Bootstrap vcpkg
        run: ./vcpkg/bootstrap-vcpkg.sh
        # .NET is a dependency of nbgv
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - uses: dotnet/nbgv@master
        id: nbgv
      - name: Install libobjc2
        run: ./vcpkg/vcpkg install libobjc2:x64-linux-llvm --overlay-ports=./ports --overlay-triplets=./triplets
      - name: Install libdispatch
        run: ./vcpkg/vcpkg install libdispatch:x64-linux-llvm --overlay-ports=./ports --overlay-triplets=./triplets
      - name: Install gnustep-make
        run: ./vcpkg/vcpkg install gnustep-make:x64-linux-llvm --overlay-ports=./ports --overlay-triplets=./triplets
      - name: Install gnustep-base dependencies (Ubuntu)
        run: |
          apt-get update
          apt-get install -y libxml2-dev libxslt-dev libcurl4-gnutls-dev gnutls-dev libffi-dev libicu-dev
        if: matrix.family == 'ubuntu'
      - name: Install gnustep-base dependencies (Enterprise Linux)
        run: |
          yum install -y libxml2-devel libxslt-devel libcurl-devel gnutls-devel libffi-devel libicu-devel
        if: matrix.family == 'rhel'
      - name: Install gnustep-base
        run: ./vcpkg/vcpkg install gnustep-base:x64-linux-llvm --overlay-ports=./ports --overlay-triplets=./triplets
      - name: Install gnustep-gui dependencies (Ubuntu)
        run: |
          apt-get update
          apt-get install -y libtiff-dev libpng-dev libjpeg-dev libgif-dev
        if: matrix.family == 'ubuntu'
      - name: Install gnustep-base dependencies (Enterprise Linux)
        run: |
          yum install --enablerepo=${{ matrix.repos}} -y libtiff-devel libpng-devel libjpeg-devel giflib-devel
        if: matrix.family == 'rhel'
      - name: Install gnustep-gui
        run: ./vcpkg/vcpkg install gnustep-gui:x64-linux-llvm --overlay-ports=./ports --overlay-triplets=./triplets
      - name: Install gnustep-headless
        run: ./vcpkg/vcpkg install gnustep-headless:x64-linux-llvm --overlay-ports=./ports --overlay-triplets=./triplets
      - name: Install gnustep-back dependencies (Ubuntu)
        run: |
          apt-get update
          apt-get install -y libcairo2-dev libxt-dev
        if: matrix.family == 'ubuntu'
      - name: Install gnustep-base dependencies (Enterprise Linux)
        run: |
          yum install --enablerepo=${{ matrix.repos}} -y cairo-devel libXt-devel
        if: matrix.family == 'rhel'
      - name: Install gnustep-back
        run: ./vcpkg/vcpkg install gnustep-back:x64-linux-llvm --overlay-ports=./ports --overlay-triplets=./triplets
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vcpkg-gnustep-${{ steps.nbgv.outputs.NuGetPackageVersion }}-${{ matrix.name }}
          path: ./vcpkg/installed
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vcpkg-gnustep-${{ steps.nbgv.outputs.NuGetPackageVersion }}-${{ matrix.name }}-logs
          path: ./vcpkg/buildtrees/**/*.log
      # For testing purposes, build the tutorial application
      - name: Install dependencies (Ubuntu)
        run: |
          apt-get install -y cmake ninja-build
        if: matrix.family == 'ubuntu'
      - name: Install dependencies (Enterprise Linux)
        run: |
          yum install --enablerepo=${{ matrix.repos}} -y cmake ninja-build
        if: matrix.family == 'rhel'
      - name: Configure and build tutorial
        run: |
          ./vcpkg/vcpkg install gnustep:x64-linux-llvm --overlay-ports=./ports --overlay-triplets=./triplets
          cd tutorial
          cmake . --preset linux
          cmake --build --preset linux
          ./build/Tutorial
